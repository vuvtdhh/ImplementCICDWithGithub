name: CI/CD for ASP.NET Core

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --no-restore --verbosity normal

  deploy:
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Publish
      run: dotnet publish -c Release -o out

    - name: Set Variables
      id: vars
      run: |
        echo "websiteName=ImplementCICDWithGithub" >> $GITHUB_ENV
        echo "appPoolName=ImplementCICDWithGithub" >> $GITHUB_ENV
        echo "appPath=C:\Ryan\publish\ImplementCICDWithGithub" >> $GITHUB_ENV

    - name: Stop IIS Application
      shell: pwsh
      run: |
        $websiteName = "${{ env.websiteName }}"
        Stop-WebAppPool -Name $websiteName

    - name: Check and Create App Pool
      shell: pwsh
      run: |
        $appPoolName = "${{ env.appPoolName }}"
        $websiteName = "${{ env.websiteName }}"
        $appPath = "${{ env.appPath }}"

        # Kiểm tra và tạo Application Pool nếu không tồn tại
        if (-Not (Get-WebAppPoolState -Name $appPoolName -ErrorAction SilentlyContinue)) {
          New-WebAppPool -Name $appPoolName
          Write-Host "Created App Pool: $appPoolName"
        }

        # Kiểm tra website
        if (-Not (Get-Website -Name $websiteName -ErrorAction SilentlyContinue)) {
          New-Website -Name $websiteName -Port 8080 -PhysicalPath $appPath -ApplicationPool $appPoolName
        }
