name: CI/CD for ASP.NET Core

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Lấy mã nguồn từ repository

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'  # Thiết lập phiên bản .NET Core

    - name: Restore dependencies
      run: dotnet restore  # Khôi phục các dependencies

    - name: Build
      run: dotnet build --configuration Release --no-restore  # Xây dựng ứng dụng

    - name: Test
      run: dotnet test --no-restore --verbosity normal  # Chạy kiểm thử

  deploy:
    runs-on: self-hosted  # Chạy job deploy trên self-hosted runner
    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Lấy mã nguồn từ repository

    - name: Publish
      run: dotnet publish -c Release -o out  # Xuất bản ứng dụng

    - name: Set Variables
      id: vars
      run: |
        echo "websiteName=ImplementCICDWithGithub" >> $GITHUB_ENV
        echo "appPoolName=ImplementCICDWithGithub" >> $GITHUB_ENV
        echo "appPath=C:\Ryan\publish\ImplementCICDWithGithub" >> $GITHUB_ENV

    - name: Stop IIS Application
      run: |
        Stop-WebAppPool -Name ${{ env.websiteName }}  # Dừng Application Pool tương ứng

    - name: Check and Create App Pool
      run: |
        # Kiểm tra và tạo Application Pool nếu không tồn tại
        if (-Not (Get-WebAppPoolState -Name ${{ env.appPoolName }} -ErrorAction SilentlyContinue)) {
          New-WebAppPool -Name ${{ env.appPoolName }}
          Write-Host "Created App Pool: ${{ env.appPoolName }}"
        }

        # Kiểm tra website
        if (-Not (Get-Website -Name ${{ env.websiteName }} -ErrorAction SilentlyContinue)) {
          New-Website -Name ${{ env.websiteName }} -Port 8080 -PhysicalPath ${{ env.appPath }} -ApplicationPool ${{ env.appPoolName }}
        }

    - name: Copy files to publish folder
      run: |
        # Sử dụng RoboCopy để đồng bộ từ thư mục out sang thư mục publish
        $source = "$(System.DefaultWorkingDirectory)\out"
        $destination = "C:\Ryan\publish\ImplementCICDWithGithub"
        robocopy $source $destination /MIR /R:3 /W:5 /XF appsettings.json web.config  # Thực hiện sao chép với chế độ đồng bộ, bỏ qua appsettings.json và web.config

    - name: Start IIS Application
      run: |
        Start-WebAppPool -Name ${{ env.websiteName }}  # Khởi động lại Application Pool
